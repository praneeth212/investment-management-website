// <auto-generated />
using System;
using Managament.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Managament.Migrations
{
    [DbContext(typeof(MVCDemoDbContext))]
    [Migration("20240808115716_Done")]
    partial class Done
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Managament.Models.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pan_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordResetTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Managament.Models.Domain.Investment", b =>
                {
                    b.Property<int>("InvestmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvestmentId"));

                    b.Property<decimal>("AmountInvested")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("AmountRedeemed")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvestmentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MutualFundId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UnitsOwned")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("InvestmentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MutualFundId");

                    b.ToTable("Investments");
                });

            modelBuilder.Entity("Managament.Models.Domain.MutualFund", b =>
                {
                    b.Property<int>("MutualFundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MutualFundId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExitLoad")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<float>("MinimumInvestment")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Risk")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MutualFundId");

                    b.ToTable("MutualFunds");
                });

            modelBuilder.Entity("Managament.Models.Domain.NAV", b =>
                {
                    b.Property<int>("NavId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NavId"));

                    b.Property<int>("MutualFundId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NAVDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NAVValue")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("NavId");

                    b.HasIndex("MutualFundId");

                    b.ToTable("NAVs");
                });

            modelBuilder.Entity("Managament.Models.Domain.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("InvestmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Units")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("TransactionId");

                    b.HasIndex("InvestmentId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Management.Models.Domain.SupportRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("SupportRequests");
                });

            modelBuilder.Entity("Managament.Models.Domain.Investment", b =>
                {
                    b.HasOne("Managament.Models.Domain.Customer", "Customer")
                        .WithMany("Investments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Managament.Models.Domain.MutualFund", "MutualFund")
                        .WithMany("Investments")
                        .HasForeignKey("MutualFundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("MutualFund");
                });

            modelBuilder.Entity("Managament.Models.Domain.NAV", b =>
                {
                    b.HasOne("Managament.Models.Domain.MutualFund", "MutualFund")
                        .WithMany("NAVs")
                        .HasForeignKey("MutualFundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MutualFund");
                });

            modelBuilder.Entity("Managament.Models.Domain.Transaction", b =>
                {
                    b.HasOne("Managament.Models.Domain.Investment", "Investment")
                        .WithMany("Transactions")
                        .HasForeignKey("InvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Investment");
                });

            modelBuilder.Entity("Management.Models.Domain.SupportRequest", b =>
                {
                    b.HasOne("Managament.Models.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Managament.Models.Domain.Customer", b =>
                {
                    b.Navigation("Investments");
                });

            modelBuilder.Entity("Managament.Models.Domain.Investment", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Managament.Models.Domain.MutualFund", b =>
                {
                    b.Navigation("Investments");

                    b.Navigation("NAVs");
                });
#pragma warning restore 612, 618
        }
    }
}
